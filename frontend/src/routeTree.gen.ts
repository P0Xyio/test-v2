/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WelcomeImport } from './routes/welcome'
import { Route as authLoginImport } from './routes/(auth)/login'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const authCreateAccountLazyImport = createFileRoute('/(auth)/create-account')()

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
  path: '/welcome',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const authCreateAccountLazyRoute = authCreateAccountLazyImport
  .update({
    path: '/create-account',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/create-account.lazy').then((d) => d.Route),
  )

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/create-account': {
      id: '/create-account'
      path: '/create-account'
      fullPath: '/create-account'
      preLoaderRoute: typeof authCreateAccountLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/welcome': typeof WelcomeRoute
  '/login': typeof authLoginRoute
  '/create-account': typeof authCreateAccountLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/welcome': typeof WelcomeRoute
  '/login': typeof authLoginRoute
  '/create-account': typeof authCreateAccountLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/welcome': typeof WelcomeRoute
  '/login': typeof authLoginRoute
  '/create-account': typeof authCreateAccountLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/welcome' | '/login' | '/create-account'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/welcome' | '/login' | '/create-account'
  id: '__root__' | '/' | '/welcome' | '/login' | '/create-account'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  WelcomeRoute: typeof WelcomeRoute
  authLoginRoute: typeof authLoginRoute
  authCreateAccountLazyRoute: typeof authCreateAccountLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  WelcomeRoute: WelcomeRoute,
  authLoginRoute: authLoginRoute,
  authCreateAccountLazyRoute: authCreateAccountLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/welcome",
        "/login",
        "/create-account"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/welcome": {
      "filePath": "welcome.tsx"
    },
    "/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/create-account": {
      "filePath": "(auth)/create-account.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
